// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/card/[cardId]" | "/dashboard" | "/dashboard/accessories" | "/dashboard/cards" | "/dashboard/cards/[cardId]" | "/dashboard/contacts" | "/dashboard/earnings" | "/dashboard/referrals" | "/dashboard/settings" | "/dashboard/support" | "/dashboard/systems" | "/earnings" | "/landing" | "/members" | "/opportunities" | "/pricing" | "/simple" | "/test"
type PageRoutes = "/Earnings" | "/Landing" | "/MembersDirectory" | "/NewOnboarding" | "/NotFound" | "/Onboarding" | "/Opportunities" | "/Pricing" | "/dashboard/Accessories" | "/dashboard/CardDetails" | "/dashboard/Cards" | "/dashboard/Contacts" | "/dashboard/DashboardHome" | "/dashboard/Onboarding" | "/dashboard/PlaceholderPage" | "/dashboard/Referrals" | "/dashboard/Settings" | "/dashboard/Support" | "/dashboard/Systems"
type LayoutRoutes = "/" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/card/[cardId]": { "cardId": string; }
  "/dashboard": {}
  "/dashboard/accessories": {}
  "/dashboard/Accessories": {}
  "/dashboard/CardDetails": {}
  "/dashboard/cards": {}
  "/dashboard/Cards": {}
  "/dashboard/cards/[cardId]": { "cardId": string; }
  "/dashboard/contacts": {}
  "/dashboard/Contacts": {}
  "/dashboard/DashboardHome": {}
  "/dashboard/earnings": {}
  "/dashboard/Onboarding": {}
  "/dashboard/PlaceholderPage": {}
  "/dashboard/referrals": {}
  "/dashboard/Referrals": {}
  "/dashboard/settings": {}
  "/dashboard/Settings": {}
  "/dashboard/support": {}
  "/dashboard/Support": {}
  "/dashboard/systems": {}
  "/dashboard/Systems": {}
  "/earnings": {}
  "/Earnings": {}
  "/landing": {}
  "/Landing": {}
  "/members": {}
  "/MembersDirectory": {}
  "/NewOnboarding": {}
  "/NotFound": {}
  "/Onboarding": {}
  "/opportunities": {}
  "/Opportunities": {}
  "/pricing": {}
  "/Pricing": {}
  "/simple": {}
  "/test": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
